/**
 * Generated by Agitar build: JUnitFactory Version 2.1.2.000677 (Build date: Dec 21, 2007) [2.1.2.000677]
 * JDK Version: 1.5.0_11
 *
 * Generated on Jan 5, 2008 7:29:18 AM
 * Time to generate: 00:11.808 seconds
 *
 *
 *
 */

package org.gavaghan.geodesy;


import org.junit.Assert;
import org.junit.Test;

public class GeodeticCurveAgitarTest {

    @Test
	public void testConstructor() throws Throwable {
        GeodeticCurve geodeticCurve = new GeodeticCurve(100.0, 1000.0, 0.0);
        Assert.assertEquals("geodeticCurve.getReverseAzimuth()", 0.0, geodeticCurve.getReverseAzimuth(), 1.0E-6);
        Assert.assertEquals("geodeticCurve.getEllipsoidalDistance()", 100.0, geodeticCurve.getEllipsoidalDistance(), 1.0E-6);
        Assert.assertEquals("geodeticCurve.getAzimuth()", 1000.0, geodeticCurve.getAzimuth(), 1.0E-6);
    }
    
    @Test
	public void testGetAzimuth() throws Throwable {
        double result = new GeodeticCurve(100.0, 0.0, 1000.0).getAzimuth();
        Assert.assertEquals("result", 0.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetAzimuth1() throws Throwable {
        double result = new GeodeticCurve(100.0, 1000.0, 0.0).getAzimuth();
        Assert.assertEquals("result", 1000.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetEllipsoidalDistance() throws Throwable {
        double result = new GeodeticCurve(0.0, 100.0, 1000.0).getEllipsoidalDistance();
        Assert.assertEquals("result", 0.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetEllipsoidalDistance1() throws Throwable {
        double result = new GeodeticCurve(100.0, 1000.0, 0.0).getEllipsoidalDistance();
        Assert.assertEquals("result", 100.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetReverseAzimuth() throws Throwable {
        double result = new GeodeticCurve(100.0, 1000.0, -1.0).getReverseAzimuth();
        Assert.assertEquals("result", -1.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetReverseAzimuth1() throws Throwable {
        double result = new GeodeticCurve(100.0, 1000.0, 0.0).getReverseAzimuth();
        Assert.assertEquals("result", 0.0, result, 1.0E-6);
    }
    
    @Test
	public void testToString() throws Throwable {
        String result = new GeodeticCurve(100.0, 1000.0, 0.0).toString();
        Assert.assertEquals("result", "s=100.0;a12=1000.0;a21=0.0;", result);
    }
}

