/**
 * Generated by Agitar build: JUnitFactory Version 2.1.2.000677 (Build date: Dec 21, 2007) [2.1.2.000677]
 * JDK Version: 1.5.0_11
 *
 * Generated on Jan 5, 2008 8:25:35 AM
 * Time to generate: 00:12.593 seconds
 *
 *
 *
 */

package org.gavaghan.geodesy;

import org.junit.Assert;
import org.junit.Test;

public class GeodeticMeasurementAgitarTest {
    
    @Test
	public void testConstructor() throws Throwable {
        GeodeticMeasurement geodeticMeasurement = new GeodeticMeasurement(new GeodeticCurve(100.0, 1000.0, 0.0), 100.0);
        Assert.assertEquals("geodeticMeasurement.getReverseAzimuth()", 0.0, geodeticMeasurement.getReverseAzimuth(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getPointToPointDistance()", 141.4213562373095, geodeticMeasurement.getPointToPointDistance(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getEllipsoidalDistance()", 100.0, geodeticMeasurement.getEllipsoidalDistance(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getAzimuth()", 1000.0, geodeticMeasurement.getAzimuth(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getElevationChange()", 100.0, geodeticMeasurement.getElevationChange(), 1.0E-6);
    }
    
    @Test
	public void testConstructor1() throws Throwable {
        GeodeticMeasurement geodeticMeasurement = new GeodeticMeasurement(100.0, 1000.0, 0.0, -1.0);
        Assert.assertEquals("geodeticMeasurement.getReverseAzimuth()", 0.0, geodeticMeasurement.getReverseAzimuth(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getPointToPointDistance()", 100.00499987500625, geodeticMeasurement.getPointToPointDistance(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getEllipsoidalDistance()", 100.0, geodeticMeasurement.getEllipsoidalDistance(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getAzimuth()", 1000.0, geodeticMeasurement.getAzimuth(), 1.0E-6);
        Assert.assertEquals("geodeticMeasurement.getElevationChange()", -1.0, geodeticMeasurement.getElevationChange(), 1.0E-6);
    }
    
    @Test
	public void testGetElevationChange() throws Throwable {
        double result = new GeodeticMeasurement(100.0, 1000.0, 0.0, -1.0).getElevationChange();
        Assert.assertEquals("result", -1.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetElevationChange1() throws Throwable {
        double result = new GeodeticMeasurement(new GeodeticCurve(100.0, 1000.0, 0.0), 0.0).getElevationChange();
        Assert.assertEquals("result", 0.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetPointToPointDistance() throws Throwable {
        double result = new GeodeticMeasurement(new GeodeticCurve(0.0, 100.0, 1000.0), 0.0).getPointToPointDistance();
        Assert.assertEquals("result", 0.0, result, 1.0E-6);
    }
    
    @Test
	public void testGetPointToPointDistance1() throws Throwable {
        double result = new GeodeticMeasurement(100.0, 1000.0, 0.0, -1.0).getPointToPointDistance();
        Assert.assertEquals("result", 100.00499987500625, result, 1.0E-6);
    }
    
    @Test
	public void testToString() throws Throwable {
        String result = new GeodeticMeasurement(new GeodeticCurve(100.0, 1000.0, 0.0), 100.0).toString();
        Assert.assertEquals("result", "s=100.0;a12=1000.0;a21=0.0;elev12=100.0;p2p=141.4213562373095", result);
    }
    
    @Test
	public void testConstructorThrowsNullPointerException() throws Throwable {
        try {
            new GeodeticMeasurement(null, 100.0);
            Assert.fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            Assert.assertNull("ex.getMessage()", ex.getMessage());
            //assertThrownBy(GeodeticMeasurement.class, ex);
        }
    }
}

